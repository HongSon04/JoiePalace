import { PrismaClient } from '@prisma/client';
import slugify from 'slugify';
const prisma = new PrismaClient();

const MakeSlugger = (str: string): string => {
  return slugify(str, {
    replacement: '-',
    remove: undefined,
    lower: true,
    strict: false,
    locale: 'vi',
    trim: true,
  });
};

const lastName = [
  'Võ',
  'Nguyễn',
  'Trần',
  'Lê',
  'Phạm',
  'Hoàng',
  'Huỳnh',
  'Phan',
  'Vũ',
  'Đặng',
  'Bùi',
  'Đỗ',
  'Hồ',
  'Ngô',
  'Dương',
  'Lý',
  'An',
  'Bạch',
  'Hà',
  'Tạ',
  'Thái',
  'Đinh',
  'Lâm',
  'Kiều',
  'Mai',
  'Tiêu',
  'Từ',
  'Thi',
  'Tô',
  'Tôn',
  'Phùng',
  'Quách',
  'Trịnh',
  'Đoàn',
  'Chu',
  'Hứa',
  'Tăng',
  'Khương',
  'Nghiêm',
  'Đồng',
  'Thạch',
  'Đường',
  'Lục',
  'Tào',
  'Tống',
  'Uông',
  'Viên',
  'Thiệu',
  'Thủy',
  'Từ',
  'Tô',
  'Tôn',
  'Phùng',
  'Quách',
  'Trịnh',
  'Đoàn',
  'Chu',
  'Hứa',
  'Tăng',
  'Khương',
  'Nghiêm',
  'Đồng',
  'Thạch',
  'Đường',
  'Lục',
  'Tào',
  'Tống',
  'Uông',
  'Viên',
  'Thiệu',
  'Thủy',
  'Từ',
  'Tô',
  'Tôn',
  'Phùng',
  'Quách',
  'Trịnh',
  'Đoàn',
  'Chu',
  'Hứa',
  'Tăng',
  'Khương',
  'Nghiêm',
  'Đồng',
  'Thạch',
  'Đường',
  'Lục',
  'Tào',
  'Tống',
  'Uông',
  'Viên',
  'Thiệu',
  'Thủy',
  'Từ',
  'Tô',
  'Tôn',
  'Phùng',
  'Quách',
  'Trịnh',
  'Đoàn',
  'Chu',
  'Hứa',
  'Tăng',
  'Khương',
  'Nghiêm',
  'Đồng',
  'Thạch',
  'Đường',
  'Lục',
  'Tào',
  'Tống',
  'Uông',
  'Viên',
  'Thiệu',
  'Thủy',
];

const firstName = [
  'Minh',
  'Hải',
  'Hà',
  'Huy',
  'Hưng',
  'Thành',
  'Tuấn',
  'Duy',
  'Đức',
  'Anh',
  'Hòa',
  'Phúc',
  'Phú',
  'Hùng',
  'Văn',
  'Thắng',
  'Quân',
  'Nam',
  'Quang',
  'Trung',
  'Nhân',
  'Tùng',
  'Tú',
  'Đạt',
  'Thịnh',
  'Thị',
  'Hồng',
  'Hạnh',
  'Hoa',
  'Linh',
  'Lan',
  'Hương',
  'Ngọc',
  'Thảo',
  'Mai',
  'Diệu',
  'Trang',
  'Yến',
  'Hằng',
  'Thu',
  'Thủy',
  'Ngân',
  'Tâm',
];

const comments = ['Rất tốt', 'Tốt', 'Bình thường', 'Kém', 'Rất kém'];
const rate = [1, 2, 3, 4, 5];

export const feedbackSeed = async () => {
  const findBranch = await prisma.branches.findMany();
  const findUser = await prisma.users.findMany();
  const findBook = await prisma.bookings.findMany();

  for (let i = 0; i < 1000; i++) {
    const fb = await prisma.feedbacks.create({
      data: {
        branch_id: findBranch[Math.floor(Math.random() * findBranch.length)].id,
        user_id: findUser[Math.floor(Math.random() * findUser.length)].id,
        booking_id: findBook[Math.floor(Math.random() * findBook.length)].id,
        rate: rate[Math.floor(Math.random() * rate.length)],
        comments: comments[Math.floor(Math.random() * comments.length)],
        name: `${lastName[Math.floor(Math.random() * lastName.length)]} ${firstName[Math.floor(Math.random() * firstName.length)]}`,
      },
    });
    console.log('Created feedback:', fb.name);
  }
};
