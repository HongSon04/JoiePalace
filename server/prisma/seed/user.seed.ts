import { PrismaClient } from '@prisma/client';
import slugify from 'slugify';
import * as bcrypt from 'bcrypt';
import uniqid from 'uniqid';
const prisma = new PrismaClient();

const lastName = [
  'Võ',
  'Nguyễn',
  'Trần',
  'Lê',
  'Phạm',
  'Hoàng',
  'Huỳnh',
  'Phan',
  'Vũ',
  'Đặng',
  'Bùi',
  'Đỗ',
  'Hồ',
  'Ngô',
  'Dương',
  'Lý',
  'An',
  'Bạch',
  'Hà',
  'Tạ',
  'Thái',
  'Đinh',
  'Lâm',
  'Kiều',
  'Mai',
  'Tiêu',
  'Từ',
  'Thi',
  'Tô',
  'Tôn',
  'Phùng',
  'Quách',
  'Trịnh',
  'Đoàn',
  'Chu',
  'Hứa',
  'Tăng',
  'Khương',
  'Nghiêm',
  'Đồng',
  'Thạch',
  'Đường',
  'Lục',
  'Tào',
  'Tống',
  'Uông',
  'Viên',
  'Thiệu',
  'Thủy',
  'Từ',
  'Tô',
  'Tôn',
  'Phùng',
  'Quách',
  'Trịnh',
  'Đoàn',
  'Chu',
  'Hứa',
  'Tăng',
  'Khương',
  'Nghiêm',
  'Đồng',
  'Thạch',
  'Đường',
  'Lục',
  'Tào',
  'Tống',
  'Uông',
  'Viên',
  'Thiệu',
  'Thủy',
  'Từ',
  'Tô',
  'Tôn',
  'Phùng',
  'Quách',
  'Trịnh',
  'Đoàn',
  'Chu',
  'Hứa',
  'Tăng',
  'Khương',
  'Nghiêm',
  'Đồng',
  'Thạch',
  'Đường',
  'Lục',
  'Tào',
  'Tống',
  'Uông',
  'Viên',
  'Thiệu',
  'Thủy',
  'Từ',
  'Tô',
  'Tôn',
  'Phùng',
  'Quách',
  'Trịnh',
  'Đoàn',
  'Chu',
  'Hứa',
  'Tăng',
  'Khương',
  'Nghiêm',
  'Đồng',
  'Thạch',
  'Đường',
  'Lục',
  'Tào',
  'Tống',
  'Uông',
  'Viên',
  'Thiệu',
  'Thủy',
];

const firstName = [
  'Minh',
  'Hải',
  'Hà',
  'Huy',
  'Hưng',
  'Thành',
  'Tuấn',
  'Duy',
  'Đức',
  'Anh',
  'Hòa',
  'Phúc',
  'Phú',
  'Hùng',
  'Văn',
  'Thắng',
  'Quân',
  'Nam',
  'Quang',
  'Trung',
  'Nhân',
  'Tùng',
  'Tú',
  'Đạt',
  'Thịnh',
  'Thị',
  'Hồng',
  'Hạnh',
  'Hoa',
  'Linh',
  'Lan',
  'Hương',
  'Ngọc',
  'Thảo',
  'Mai',
  'Diệu',
  'Trang',
  'Yến',
  'Hằng',
  'Thu',
  'Thủy',
  'Ngân',
  'Tâm',
];

const number = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];

const MakeSlugger = (str: string): string => {
  return slugify(str, {
    replacement: '',
    remove: undefined,
    lower: true,
    strict: false,
    locale: 'vi',
    trim: true,
  });
};

const hashedPassword = bcrypt.hashSync('password123', 10);
const dateNow = Number(new Date());
const randomUnique = Math.floor(Math.random() * 90000000000000) + dateNow;
const uid = uniqid();

export const userSeed = async (count: number) => {
  for (let i = 0; i < count; i++) {
    await prisma.users.create({
      data: {
        username: `${lastName[Math.floor(Math.random() * lastName.length)]} ${firstName[Math.floor(Math.random() * firstName.length)]} ${number[Math.floor(Math.random() * number.length)]}`,
        email: `${MakeSlugger(lastName[Math.floor(Math.random() * lastName.length)])}${uid}${MakeSlugger(firstName[Math.floor(Math.random() * firstName.length)])}${number[Math.floor(Math.random() * number.length)]}${randomUnique + count + 1}${uid}${uid}@gmail.com`,
        password: hashedPassword,
        phone: `0${Math.floor(Math.random() * 1000000000)}`,
      },
    });
  }
};
